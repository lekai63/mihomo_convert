[General]
ipasn-url = https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country-asn.mmdb
geoip-url = https://cdn.jsdelivr.net/gh/Loyalsoldier/geoip@release/Country-only-cn-private.mmdb
ip-mode = dual
# IPv6 支持
ipv6 = true
# > 跳过某个域名或者IP段
skip-proxy = 127.0.0.1,10.0.0.0/8,172.16.0.0/12,100.64.0.0/10,localhost,*.local{% if not proxies|selectattr("name", "equalto", "backhome")|list %},192.168.0.0/16{% endif %}

bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32{% if not proxies|selectattr("name", "equalto", "backhome")|list %},192.168.0.0/16{% endif %}

# DNS 服务器
dns-server = system,119.29.29.29,223.5.5.5,114.114.114.114
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# > 代理测速 URL
proxy-test-url = http://cp.cloudflare.com/generate_204
internet-test-url = http://wifi.vivo.com.cn/generate_204
# > 测速超时 (s)
test-timeout = 5
interface-mode = performance
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
real-ip = msftconnecttest.com,msftncsi.com,*.msftconnecttest.com,*.msftncsi.com,*.srv.nintendo.net,*.stun.playstation.net,xbox.*.microsoft.com,*.xboxlive.com,*.battlenet.com.cn,*.battlenet.com,*.blzstatic.cn,*.battle.net
# 解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/scripts/sub-store-parser.js

[Host]
#可以使用以下四种模式：
# 1 指定域名使用对应的IP地址
{%if hosts %}
{%for domain, ip in hosts.items() %}
{{ domain }} = {{ ip }}
{% endfor %}
{% endif %}
# nginx.cn.quarkmed.com = 192.168.1.201

# 2 将域名指向另一个域名
# 3 指定域名请求DNS时使用特定的DNS服务器，格式为：google.com = server:8.8.8.8 或者 *.baidu.com = server:https://example.com/dns-query
#  指定具体的SSID环境下使用特定的DNS服务器
# 如果这里设置 *.cn.quarkmed.com 会导致 backhome节点(mi.cn.quarkmed.com)在家以外时 被解析为192.168.1.201
[Proxy]
{% for proxy in proxies %}
{% if proxy.type == "vmess" %}
{{ proxy.name }} = Vmess,{{ proxy.server }},{{ proxy.port }},{{ proxy.cipher }},"{{ proxy.uuid }}",transport=ws,alterId={{ proxy.alterId }},path={{ proxy['ws-opts'].path }},host={{ proxy['ws-opts'].headers.Host }},over-tls=true,skip-cert-verify=true
{% elif proxy.type == "ss" %}
{{ proxy.name }} = Shadowsocks,{{ proxy.server }},{{ proxy.port }},{{ proxy.cipher }},"{{ proxy.password }}",fast-open=false,udp=true
{% elif proxy.type == "http" %}
{{ proxy.name }} = HTTP,{{ proxy.server }},{{ proxy.port }},{{ proxy.username }},"{{ proxy.password }}"
{% elif proxy.type == "socks5" %}
{{ proxy.name }} = Socks5,{{ proxy.server }},{{ proxy.port }}
{% endif %}
{% endfor %}

[Remote Proxy]
{% for provider in proxy_providers %}
{{ provider.name }} = {{ provider.url }},udp=default,fast-open=default,vmess-aead=default,skip-cert-verify=default,enabled=true,flexible-sni=true
{% endfor %}

[Remote Filter]
{% for group in proxy_groups if group.filter is defined %}
{%- if group['include-all'] is defined %}
{{ group.name }}Node = NameRegex,{{ proxy_providers|map(attribute='name')|join(',') }}, FilterKey = "{{ group.filter }}"
{%- else %}
{{ group.name }}Node = NameRegex,{{ group.use|join(',') }}, FilterKey = "{{ group.filter }}"
{%- endif %}
{%- endfor %}


[Proxy Group]
{% for group in proxy_groups %}
{% if group.filter is defined %}
{{ group.name }} = select,{{ group.name }}Node,img-url = {{ group.icon |  default ('paperplane')}}
{% elif group.use is defined %}
{{ group.name }} = select,{{ group.use | join(',') }},img-url = {{ group.icon |  default ('paperplane') }}
{% elif group.proxies is defined %}
{{ group.name }} = select,{{ group.proxies | join(',') }},url = http://cp.cloudflare.com/generate_204,img-url = {{ group.icon |  default ('paperplane')}}
{% elif group.type == 'ssid' %}
{{ group.name }} = {{ group.ssid_setting }},url = {{ group.url }},img-url = {{ group.icon }}
{% endif %}
{% endfor %}


[Remote Rule]
{% for provider in rule_providers %}
{{ provider.url | replace('yaml', 'list') }}, policy={{ provider.policy }}, tag={{ provider.name }}, enabled=true
{% endfor %}

[Rule]
{% for rule in rules %}
{% if rule.startswith('DOMAIN') or rule.startswith('IP-CIDR') or rule.startswith('GEOIP')  %}
{{ rule }}
{% endif %}
{% endfor %}
FINAL,Proxy

[Remote Rewrite]
# 远程重写

[URL Rewrite]
# 本地重写
# Revenuecat订阅
^https:\/\/(api\.revenuecat\.com|api\.rc-backup\.com)\/.+\/(receipts$|subscribers\/[^/]+$) header https://rc-backup.lovebabyforever.workers.dev
^https:\/\/(api\.revenuecat\.com|api\.rc-backup\.com)\/.+\/(receipts$|subscribers\/[^/]+$) header https://reven.lovebabyforever.workers.dev



[Remote Script]

[Script]
# 任务脚本
generic script-path=https://raw.githubusercontent.com/Loon0x00/LoonScript/main/MediaCheck/check.js, timeout=300, tag=流媒体-解锁查询, img-url=https://raw.githubusercontent.com/erdongchanyo/icon/main/Policy-Filter/GMedia.png

[Plugin]
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/wechatad.plugin, enabled=true
https://github.com/BiliUniverse/ADBlock/releases/latest/download/BiliBili.ADBlock.plugin, enabled=true
https://github.com/BiliUniverse/Enhanced/releases/latest/download/BiliBili.Enhanced.plugin, enabled=true
https://github.com/DualSubs/YouTube/releases/latest/download/DualSubs.YouTube.plugin, enabled=true
https://github.com/NSRingo/TestFlight/releases/latest/download/iRingo.TestFlight.plugin, enabled=true
https://github.com/NSRingo/TV/releases/latest/download/iRingo.TV.plugin, enabled=true
https://github.com/NSRingo/Siri/releases/latest/download/iRingo.Siri.plugin, enabled=true
https://github.com/NSRingo/GeoServices/releases/latest/download/iRingo.Maps.plugin, enabled=true
https://github.com/NSRingo/GeoServices/releases/latest/download/iRingo.Location.plugin, enabled=true
https://github.com/NSRingo/WeatherKit/releases/latest/download/iRingo.WeatherKit.plugin, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=Proxy, tag=boxjs, enabled=true
https://raw.githubusercontent.com/I-am-R-E/Functional-Store-Hub/Master/Xmind/Xmind.Loon.plugin, tag=xmind pro 解锁, enabled=true
https://raw.githubusercontent.com/Tartarus2014/Loon-Script/master/Plugin/skip-proxy.plugin, tag=跳过部分代理检测, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/main/Tool/Loon/Plugin/LoonGallery.plugin, policy=Proxy, tag=社区插件仓库, enabled=true
https://raw.githubusercontent.com/erdongchanyo/Rules/main/Loon/AllinOneRewritePlugin/edc.plugin, tag=EDC-ALLinONE, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/youtube.plugin, tag=Youtube首页瀑布流去广告, enabled=true

[MITM]
ca-p12 = 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
ca-passphrase = ca032003
hostname = api.revenuecat.com,api.rc-backup.com
# enable = true
skip-server-cert-verify = true
